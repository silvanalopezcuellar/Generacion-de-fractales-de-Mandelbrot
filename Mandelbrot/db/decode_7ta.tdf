--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" LPM_DECODES=29 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_7ta
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[28..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[28..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode302w[2..0]	: WIRE;
	w_anode315w[3..0]	: WIRE;
	w_anode332w[3..0]	: WIRE;
	w_anode342w[3..0]	: WIRE;
	w_anode352w[3..0]	: WIRE;
	w_anode362w[3..0]	: WIRE;
	w_anode372w[3..0]	: WIRE;
	w_anode382w[3..0]	: WIRE;
	w_anode392w[3..0]	: WIRE;
	w_anode404w[2..0]	: WIRE;
	w_anode413w[3..0]	: WIRE;
	w_anode424w[3..0]	: WIRE;
	w_anode434w[3..0]	: WIRE;
	w_anode444w[3..0]	: WIRE;
	w_anode454w[3..0]	: WIRE;
	w_anode464w[3..0]	: WIRE;
	w_anode474w[3..0]	: WIRE;
	w_anode484w[3..0]	: WIRE;
	w_anode495w[2..0]	: WIRE;
	w_anode504w[3..0]	: WIRE;
	w_anode515w[3..0]	: WIRE;
	w_anode525w[3..0]	: WIRE;
	w_anode535w[3..0]	: WIRE;
	w_anode545w[3..0]	: WIRE;
	w_anode555w[3..0]	: WIRE;
	w_anode565w[3..0]	: WIRE;
	w_anode575w[3..0]	: WIRE;
	w_anode586w[2..0]	: WIRE;
	w_anode595w[3..0]	: WIRE;
	w_anode606w[3..0]	: WIRE;
	w_anode616w[3..0]	: WIRE;
	w_anode626w[3..0]	: WIRE;
	w_anode636w[3..0]	: WIRE;
	w_anode646w[3..0]	: WIRE;
	w_anode656w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_data300w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[28..0] = eq_wire[28..0];
	eq_wire[] = ( ( w_anode666w[3..3], w_anode656w[3..3], w_anode646w[3..3], w_anode636w[3..3], w_anode626w[3..3], w_anode616w[3..3], w_anode606w[3..3], w_anode595w[3..3]), ( w_anode575w[3..3], w_anode565w[3..3], w_anode555w[3..3], w_anode545w[3..3], w_anode535w[3..3], w_anode525w[3..3], w_anode515w[3..3], w_anode504w[3..3]), ( w_anode484w[3..3], w_anode474w[3..3], w_anode464w[3..3], w_anode454w[3..3], w_anode444w[3..3], w_anode434w[3..3], w_anode424w[3..3], w_anode413w[3..3]), ( w_anode392w[3..3], w_anode382w[3..3], w_anode372w[3..3], w_anode362w[3..3], w_anode352w[3..3], w_anode342w[3..3], w_anode332w[3..3], w_anode315w[3..3]));
	w_anode302w[] = ( (w_anode302w[1..1] & (! data_wire[4..4])), (w_anode302w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode315w[] = ( (w_anode315w[2..2] & (! w_data300w[2..2])), (w_anode315w[1..1] & (! w_data300w[1..1])), (w_anode315w[0..0] & (! w_data300w[0..0])), w_anode302w[2..2]);
	w_anode332w[] = ( (w_anode332w[2..2] & (! w_data300w[2..2])), (w_anode332w[1..1] & (! w_data300w[1..1])), (w_anode332w[0..0] & w_data300w[0..0]), w_anode302w[2..2]);
	w_anode342w[] = ( (w_anode342w[2..2] & (! w_data300w[2..2])), (w_anode342w[1..1] & w_data300w[1..1]), (w_anode342w[0..0] & (! w_data300w[0..0])), w_anode302w[2..2]);
	w_anode352w[] = ( (w_anode352w[2..2] & (! w_data300w[2..2])), (w_anode352w[1..1] & w_data300w[1..1]), (w_anode352w[0..0] & w_data300w[0..0]), w_anode302w[2..2]);
	w_anode362w[] = ( (w_anode362w[2..2] & w_data300w[2..2]), (w_anode362w[1..1] & (! w_data300w[1..1])), (w_anode362w[0..0] & (! w_data300w[0..0])), w_anode302w[2..2]);
	w_anode372w[] = ( (w_anode372w[2..2] & w_data300w[2..2]), (w_anode372w[1..1] & (! w_data300w[1..1])), (w_anode372w[0..0] & w_data300w[0..0]), w_anode302w[2..2]);
	w_anode382w[] = ( (w_anode382w[2..2] & w_data300w[2..2]), (w_anode382w[1..1] & w_data300w[1..1]), (w_anode382w[0..0] & (! w_data300w[0..0])), w_anode302w[2..2]);
	w_anode392w[] = ( (w_anode392w[2..2] & w_data300w[2..2]), (w_anode392w[1..1] & w_data300w[1..1]), (w_anode392w[0..0] & w_data300w[0..0]), w_anode302w[2..2]);
	w_anode404w[] = ( (w_anode404w[1..1] & (! data_wire[4..4])), (w_anode404w[0..0] & data_wire[3..3]), enable_wire);
	w_anode413w[] = ( (w_anode413w[2..2] & (! w_data300w[2..2])), (w_anode413w[1..1] & (! w_data300w[1..1])), (w_anode413w[0..0] & (! w_data300w[0..0])), w_anode404w[2..2]);
	w_anode424w[] = ( (w_anode424w[2..2] & (! w_data300w[2..2])), (w_anode424w[1..1] & (! w_data300w[1..1])), (w_anode424w[0..0] & w_data300w[0..0]), w_anode404w[2..2]);
	w_anode434w[] = ( (w_anode434w[2..2] & (! w_data300w[2..2])), (w_anode434w[1..1] & w_data300w[1..1]), (w_anode434w[0..0] & (! w_data300w[0..0])), w_anode404w[2..2]);
	w_anode444w[] = ( (w_anode444w[2..2] & (! w_data300w[2..2])), (w_anode444w[1..1] & w_data300w[1..1]), (w_anode444w[0..0] & w_data300w[0..0]), w_anode404w[2..2]);
	w_anode454w[] = ( (w_anode454w[2..2] & w_data300w[2..2]), (w_anode454w[1..1] & (! w_data300w[1..1])), (w_anode454w[0..0] & (! w_data300w[0..0])), w_anode404w[2..2]);
	w_anode464w[] = ( (w_anode464w[2..2] & w_data300w[2..2]), (w_anode464w[1..1] & (! w_data300w[1..1])), (w_anode464w[0..0] & w_data300w[0..0]), w_anode404w[2..2]);
	w_anode474w[] = ( (w_anode474w[2..2] & w_data300w[2..2]), (w_anode474w[1..1] & w_data300w[1..1]), (w_anode474w[0..0] & (! w_data300w[0..0])), w_anode404w[2..2]);
	w_anode484w[] = ( (w_anode484w[2..2] & w_data300w[2..2]), (w_anode484w[1..1] & w_data300w[1..1]), (w_anode484w[0..0] & w_data300w[0..0]), w_anode404w[2..2]);
	w_anode495w[] = ( (w_anode495w[1..1] & data_wire[4..4]), (w_anode495w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode504w[] = ( (w_anode504w[2..2] & (! w_data300w[2..2])), (w_anode504w[1..1] & (! w_data300w[1..1])), (w_anode504w[0..0] & (! w_data300w[0..0])), w_anode495w[2..2]);
	w_anode515w[] = ( (w_anode515w[2..2] & (! w_data300w[2..2])), (w_anode515w[1..1] & (! w_data300w[1..1])), (w_anode515w[0..0] & w_data300w[0..0]), w_anode495w[2..2]);
	w_anode525w[] = ( (w_anode525w[2..2] & (! w_data300w[2..2])), (w_anode525w[1..1] & w_data300w[1..1]), (w_anode525w[0..0] & (! w_data300w[0..0])), w_anode495w[2..2]);
	w_anode535w[] = ( (w_anode535w[2..2] & (! w_data300w[2..2])), (w_anode535w[1..1] & w_data300w[1..1]), (w_anode535w[0..0] & w_data300w[0..0]), w_anode495w[2..2]);
	w_anode545w[] = ( (w_anode545w[2..2] & w_data300w[2..2]), (w_anode545w[1..1] & (! w_data300w[1..1])), (w_anode545w[0..0] & (! w_data300w[0..0])), w_anode495w[2..2]);
	w_anode555w[] = ( (w_anode555w[2..2] & w_data300w[2..2]), (w_anode555w[1..1] & (! w_data300w[1..1])), (w_anode555w[0..0] & w_data300w[0..0]), w_anode495w[2..2]);
	w_anode565w[] = ( (w_anode565w[2..2] & w_data300w[2..2]), (w_anode565w[1..1] & w_data300w[1..1]), (w_anode565w[0..0] & (! w_data300w[0..0])), w_anode495w[2..2]);
	w_anode575w[] = ( (w_anode575w[2..2] & w_data300w[2..2]), (w_anode575w[1..1] & w_data300w[1..1]), (w_anode575w[0..0] & w_data300w[0..0]), w_anode495w[2..2]);
	w_anode586w[] = ( (w_anode586w[1..1] & data_wire[4..4]), (w_anode586w[0..0] & data_wire[3..3]), enable_wire);
	w_anode595w[] = ( (w_anode595w[2..2] & (! w_data300w[2..2])), (w_anode595w[1..1] & (! w_data300w[1..1])), (w_anode595w[0..0] & (! w_data300w[0..0])), w_anode586w[2..2]);
	w_anode606w[] = ( (w_anode606w[2..2] & (! w_data300w[2..2])), (w_anode606w[1..1] & (! w_data300w[1..1])), (w_anode606w[0..0] & w_data300w[0..0]), w_anode586w[2..2]);
	w_anode616w[] = ( (w_anode616w[2..2] & (! w_data300w[2..2])), (w_anode616w[1..1] & w_data300w[1..1]), (w_anode616w[0..0] & (! w_data300w[0..0])), w_anode586w[2..2]);
	w_anode626w[] = ( (w_anode626w[2..2] & (! w_data300w[2..2])), (w_anode626w[1..1] & w_data300w[1..1]), (w_anode626w[0..0] & w_data300w[0..0]), w_anode586w[2..2]);
	w_anode636w[] = ( (w_anode636w[2..2] & w_data300w[2..2]), (w_anode636w[1..1] & (! w_data300w[1..1])), (w_anode636w[0..0] & (! w_data300w[0..0])), w_anode586w[2..2]);
	w_anode646w[] = ( (w_anode646w[2..2] & w_data300w[2..2]), (w_anode646w[1..1] & (! w_data300w[1..1])), (w_anode646w[0..0] & w_data300w[0..0]), w_anode586w[2..2]);
	w_anode656w[] = ( (w_anode656w[2..2] & w_data300w[2..2]), (w_anode656w[1..1] & w_data300w[1..1]), (w_anode656w[0..0] & (! w_data300w[0..0])), w_anode586w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & w_data300w[2..2]), (w_anode666w[1..1] & w_data300w[1..1]), (w_anode666w[0..0] & w_data300w[0..0]), w_anode586w[2..2]);
	w_data300w[2..0] = data_wire[2..0];
END;
--VALID FILE
