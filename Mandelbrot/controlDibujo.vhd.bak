LIBRARY IEEE;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.numeric_std.all;
----------------------------------------------------------------------------------------------------
ENTITY controlDibujo IS
	GENERIC	( 	  Nv						:			INTEGER  := 11;
					  Nh						:			INTEGER  := 11;
					  ConP					:			INTEGER	:=	480);
	PORT		( 	  clk	               :	IN 	STD_LOGIC;
					  rst	               :	IN 	STD_LOGIC;
					  video_on				:	IN		STD_LOGIC;
					  countv					:	IN		STD_LOGIC_VECTOR(Nv-1 DOWNTO 0);
					  counth					:	IN		STD_LOGIC_VECTOR(Nh-1 DOWNTO 0);
					  pixel					:	OUT	STD_LOGIC_VECTOR(11 DOWNTO 0)
				); 
	END ENTITY;
-----------------------------------------------------------------------------------------------------
ARCHITECTURE controlDibujoARCH OF controlDibujo IS

	TYPE state IS (black,white);
	
	SIGNAL pr_state, nx_state: state;
	
	SIGNAL LimCuadradoR 		: STD_LOGIC_VECTOR(Nv-1 DOWNTO 0);
	SIGNAL LimCuadradoL 		: STD_LOGIC_VECTOR(Nv-1 DOWNTO 0);
	SIGNAL PosicionColumna	: STD_LOGIC_VECTOR(Nh-1 DOWNTO 0);
	SIGNAL PosicionFila		: STD_LOGIC_VECTOR(Nv-1 DOWNTO 0);
	SIGNAL countpix			: STD_LOGIC_VECTOR(Nh-1 DOWNTO 0);
	SIGNAL pixelmatriz		: STD_LOGIC;
	SIGNAL numeropar			: STD_LOGIC;
	SIGNAL MaxTickh			: STD_LOGIC;
	SIGNAL synch				: STD_LOGIC;

	
BEGIN
-----------------------------------------------------------------------------------------------------
	PROCESS(rst,clk)
	BEGIN
		IF	(rst='1') THEN
			pr_state <= black;
		ELSIF (rising_edge(clk)) THEN
			pr_state <= nx_state;
		END IF;
	END PROCESS;

posicionFila			<=	countv;
posicionColumna		<= countpix;

--=================================Bloque Calculadora--===========================================--
	
	Matriz: ENTITY work.Matriz 
	GENERIC	MAP( 	  Nv 						=> Nv)
	PORT MAP	( 	 	  clk	               =>	clk,
						  rst	               =>	rst,
						  PosicionFila			=>	PosicionFila,
						  PosicionColumna		=>	PosicionColumna,
						  pixelMatriz  		=>	pixelMatriz
					);
--=================================================================================================
					
	COLUMNAS: ENTITY work.conth
	GENERIC MAP( Conh      		=> Conp, 
				  Nh					=>	Nh)
	PORT	MAP( clk					=>	clk,
				  rst					=>	rst,
				  syn_clr_conth	=>	synch,
				  ena_conth		   =>	numeropar,
				  conthMaxTick	   =>	MaxTickh,
				  count				=> countpix);
					
	-----------------------------------------
	combinational: PROCESS(pr_state, counth, countv)
	BEGIN
	---------------------------------------------------------------------------------------------------------------------------
	LimCuadradoR 		<= STD_LOGIC_VECTOR(TO_UNSIGNED(1120,Nv));
	LimCuadradoL 		<= STD_LOGIC_VECTOR(TO_UNSIGNED(160,Nv));

	---------------------------------------------------------------------------------------------------------------------------
	
		IF(video_on = '1' ) THEN

				IF((counth >= LimCuadradoL ) AND ( counth <= LimCuadradoR)) THEN
					numeropar	<= (NOT counth(0));
				ELSIF((counth < LimCuadradoL ))THEN
					synch<=video_on;
				END IF;
		
		CASE pr_state IS
		
			WHEN white	=>
					pixel				 	<=	"111111111111" ;
					IF 		(((counth >= LimCuadradoL ) AND ( counth <= LimCuadradoR)) AND (pixelMatriz = '1')) THEN
							nx_state 			<= white;
					ELSIF 	((counth < LimCuadradoL ) OR ( counth > LimCuadradoR) OR ((counth >= LimCuadradoL ) AND ( counth <= LimCuadradoR) AND (pixelMatriz = '0'))) THEN
							nx_state 			<= black;
					END IF;
				
					
			WHEN black	=>
					pixel				 	<=	"000000000000";
					IF 		((counth < LimCuadradoL ) OR ( counth > LimCuadradoR) OR ((counth >= LimCuadradoL ) AND ( counth <= LimCuadradoR) AND (pixelMatriz = '0'))) THEN
							nx_state 			<= black;
					ELSIF 	(((counth >= LimCuadradoL ) AND ( counth <= LimCuadradoR)) AND (pixelMatriz = '1')) THEN
							nx_state 			<= white;
					END IF;
					
				END CASE;
		END IF;	
	END PROCESS combinational;
END ARCHITECTURE;